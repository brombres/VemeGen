#================================================================================
# VemeGen.rogue
# May 25, 2023
#================================================================================

$define VERSION "1.0"
$define DATE    "May 25, 2023"

$requireRogue "2.17"

$include VGFont
$include Script
$include TimeSegment
$include Veme
$include Vemes/HitlerReacts
$include VideoTimestamp

uses Console/CommandLineParser
uses Graphics
uses Graphics/BitmapIO

try
  VemeGen( System.command_line_arguments )

catch (error:Error)
  Console.error.println error
  System.exit 1
endTry

class Vemes : [String:Veme] [singleton];

class VemeGen
  DEFINITIONS
    DEFAULT_VEME_TYPE = "HitlerReacts"

  METHODS
    method init( args:String[] )
      local command = parse_args( args )

      local type : String
      if (command//options//type)
        type = command//options//type
        if (not Vemes.contains(type))
          throw Error( "[Error] Unsupported veme type '$'."(type) )
        endIf
      endIf

      if (command//options//help or command//args.count != 1)
        print_usage
        System.exit 0
      endIf

      local filepath = command//args[0]->String
      if (filepath.ends_with('.'))                 filepath .= leftmost(-1)
      if (filepath.ends_with(".txt",&ignore_case)) filepath .= leftmost(-4)

      local script : Script
      local file = File( "$.txt"(filepath) )
      if (file.exists)
        script = Script( file, type )
        type = script.type
      else
        if (not type) type = DEFAULT_VEME_TYPE
      endIf

      local veme = Vemes[type]
      if (not veme)
        throw Error( "[INTERNAL] Veme type not found: '$'."(type) )
      endIf

      if (script)
        veme.generate( filepath, script )
      else
        veme.create_default_script( file )
        local mesg = "\nCreated template script '$'. Edit the script as desired and then re-run 'vemegen $'."(file,file)
        println mesg.word_wrapped( 80.or_smaller(Console.width) )
      endIf

    method parse_args( args:String[] )->Value
      local command = CommandLineParser().
      [
        option( "--help",  &aliases=["-h","-?"] )
        option( "--type=", &alias="-t" )
      ].parse( args )
      return command

    method print_usage
      println "VemeGen v$"(VERSION)
      println "$ by Brom Bresenham"(DATE)
      println

      println @|USAGE
               |  vemegen [OPTIONS] <ScriptName>
               |
               |OPTIONS
               |  --help, -h, -?
               |    Show this help text.
               |
               |  --type=<VemeType>, -t <VemeType>
               |    'HitlerReacts' the currently the only supported type.
               |
               |DESCRIPTION
               |  If the specified script file does not exist then it is created with
               |  placeholder dialog.
               |
               |  If the script does exist, a video meme is created using subtitles from the
               |  script file. The output veme filename is 'ScriptName.mp4'.

endClass
